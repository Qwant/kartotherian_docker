on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6.14"
      
      - name: Lint
        run: |
          python -m pip install --pre black
          black --diff --check .

      - name: Run import
        run: |
          ./exec.py --debug load-db \
            --env INVOKE_WIKIDATA_STATS_ENABLED=0 \
            --osm-file https://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            --tiles-coords "[[266, 186, 9]]"

      - name: Run tests
        run: ./exec.py --debug --no-build test

  docker_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [load_db, tilerator, kartotherian, telegraf]
    env:
      DOCKER_IMAGE_PREFIX: qwantresearch/kartotherian
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
  
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        run: |
          REF=${GITHUB_REF#refs/*/}
          if [ "$REF" == "master" ]; then
            IMAGE_TAG=latest
          else
            # Replace '/' with '__'
            IMAGE_TAG=${REF//\//__}
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      - name: Extract branch name
        if: github.event_name == 'pull_request'
        run: |
          echo "IMAGE_TAG=$GITHUB_HEAD_REF" >> $GITHUB_ENV

      # extract branch name on pull request
      - name: Print branch name
        run: echo "${IMAGE_TAG}"
        
      - name: Set env variables
        run: |
          echo "DOCKER_IMAGE=${DOCKER_IMAGE_PREFIX}_$SERVICE:$IMAGE_TAG" >> $GITHUB_ENV
          echo "SERVICE=$SERVICE" >> $GITHUB_ENV
        env:
          SERVICE: ${{ matrix.service }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build
        run: |
          docker build --label "org.label-schema.vcs-ref=$GITHUB_SHA" -t $DOCKER_IMAGE -f ./$SERVICE/Dockerfile .

      - name: Docker push
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        run: |
          docker push $DOCKER_IMAGE
